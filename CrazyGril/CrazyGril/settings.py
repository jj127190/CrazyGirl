# -*- coding: utf-8 -*-
"""
Django settings for Cctv project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import configparser as fg
import traceback

import sys
reload(sys)
sys.setdefaultencoding('utf-8')
# MYSQL_HOST = '127.0.0.1'
# MYSQL_PORT = '3306'
# MYSQL_USER = 'root'
# MYSQL_PASS = '123456'
# MYSQL_DB = 'crazygril'

# # 配置celery




# import djcelery
# djcelery.setup_loader()
# # # 传递消息时使用的redis 的ip 端口 数据库名
# BROKER_URL = 'redis://127.0.0.1:6379/0'
# CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379/1'
# CELERY_IMPORTS = ("task.tasks", )
# CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

# # 在booktest文件夹里面的task模块的内容--所以需要创建模块
# CELERY_IMPORTS = ('task.task',)


#
# CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'

WORK_PATH=os.getcwdu()+os.sep
APP_HOME=os.path.split(WORK_PATH)[0]
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


TEMPLATE_DIRS = [os.path.join(os.path.dirname(__file__), 'templates').replace('\\','/'),
    (WORK_PATH+'web_cmdb/templates').replace('\\','/'),
    (WORK_PATH+'rudiment/templates').replace('\\','/'),
    (WORK_PATH+'oauth/templates').replace('\\','/'),
    (WORK_PATH+'webmanage/templates').replace('\\','/'),
    ]




BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = '@()ms$oq*4=^n^@vo2jx19-n98=j+p3-=l^v)l0)_@-)vcaw!x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api',
    'cmdb',
    'rudiment',
    'docker',
    'conf',
    'charts',
    'task',
    'djcelery',
    'django_celery_results',
    'django_celery_beat',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'CrazyGril.urls'




TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'CrazyGril/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CrazyGril.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}

try:
    dirs = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

    init_conf = dirs + "/init.conf"
    config = fg.RawConfigParser()
    with open(init_conf, "r") as file:
        config.read_file(file)
        mysqlip = config.get("mysql", "host")
        mysqlport = config.get("mysql", "port")
        mysqldb = config.get("mysql", "database")
        mysqlpass = config.get("mysql", "password")
        mysqluser = config.get("mysql", "user")
        print "初始化启动中==================="
        print mysqlip, mysqlport, mysqldb,  mysqlpass,  mysqluser
        if mysqlip and mysqlport and mysqldb and mysqlpass and mysqluser:
            MYSQL_HOST = mysqlip.encode("utf-8")
            MYSQL_PORT = mysqlport.encode("utf-8")
            MYSQL_USER = mysqluser.encode("utf-8")
            MYSQL_PASS = mysqlpass.encode("utf-8")
            MYSQL_DB = mysqldb.encode("utf-8")
except Exception:
    print traceback.format_exc()

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': MYSQL_DB,
        'USER': MYSQL_USER,
        'PASSWORD': MYSQL_PASS,
        'HOST': MYSQL_HOST,
        'PORT': MYSQL_PORT,
        'TEST_CHARSET': 'UTF8',
    }
}




# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)



#celery
# CELERY STUFF
BROKER_URL = 'redis://localhost:6379'
# CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_RESULT_BACKEND='django-db'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Africa/Nairobi'
CELERYBEAT_SCHEDULER = 'django_celery_beat.schedulers.DatabaseScheduler'
# CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'